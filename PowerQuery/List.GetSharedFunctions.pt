let 
    doc = [
        Documentation.Name = "get Shared Functions", 
        Documentation.FunctionName = "List.GetSharedFunctions",
        Documentation.Description = "Create a list of functions that can be copied into the Github functions template. Simply copy this function in a blank query and update the 'SelectionList' list to omit any parameters and custom fumctions. You can either include (Allow) or excluse (Disallow) items. The function checks whether the record name starts with any of the values. Shouldn't be needed often, but on occasions additional functions might be added by Microsoft or tool suppliers you might need. "
        ],
    fn = () => 
        let
    SelectionListType = "Allow", //Allow or Disallow
    SelectionList = {
            "Date","DateTime",
            "DateTimeZone","Duration",
            "Table", "Value", "Int64", 
            "Record","List","Replacer",
            "Number","Text","Splitter",
            "ExtraValues","RelativePosition",
            "Json"},
            
    Source = 
        Table.AddIndexColumn(
            Table.SelectRows(
                Table.Sort(
                    Table.FromList(Record.FieldNames(#shared), Splitter.SplitByNothing(), null, null, ExtraValues.Error),
                    {{"Column1", Order.Ascending}}
                ), 
                each if SelectionListType = "Allow" then List.AnyTrue(List.Transform(SelectionList, (prefix) => Text.StartsWith([Column1], prefix))) else  not List.AnyTrue(List.Transform(SelectionList, (prefix) => Text.StartsWith([Column1], prefix)))
            ), 
            "Index", 0, 1, Int64.Type
        ) 
in
    Table.AddColumn(Source, "Functions", each if [Index] = List.Max(Source[Index]) then [Column1] & "=" & [Column1] else [Column1] & "=" & [Column1] & ",")[Functions]
in 
    Value.ReplaceType(fn, Value.ReplaceMetadata(Value.Type(fn), doc))
